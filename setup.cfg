[tool:pytest]
addopts = -v -ra -s
pythonpath = src
testpaths = tests
markers =
    full_run: marks tests as full run (deselect with '-m "not full_run"')
    debug: debugging tests

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self\.debug
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:

[coverage:paths]
source = ./gpxtrackposter/*

[coverage:html]
directory = reports

[coverage:run]
branch = True
parallel = True
omit =
    gpxtrackposter/__init__.py

[isort]
profile = black

known_third_party =
    numpy,
    pandas,
    keras,
    tensorflow,
    sklearn,
    matplotlib,
    scipy,
    gnspy

[flake8]
exclude = .git,__pycache__,docs,old,build,dist
max-complexity = 30
max-line-length = 120
#ignore=W504,F401,E402,E266,E203,W503,C408,C416,B001

[mypy]
check_untyped_defs = True
disallow_incomplete_defs = True
disallow_untyped_defs = True
warn_unused_configs = True
warn_no_return = True
warn_unreachable = False

[pycodestyle]
count = False
#ignore = E226,E302,E41
#max-line-length = 120
statistics = True
# exclude =

[pylint.config]
extension-pkg-whitelist=
    numpy,
    pandas,
    keras,
    tensorflow,
    sklearn,
    matplotlib,
    scipy

[pylint.MESSAGES CONTROL]
disable=
    invalid-name,
    missing-docstring,

#enable=E,W
jobs=1
confidence=HIGH

[pylint.FORMAT]
max-line-length = 120
max-module-lines = 2000

[codespell]
skip = *.po,*.ts
count =
quiet-level = 3
